// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.EsxiNative
{
    [EsxiNativeResourceType("esxi-native:index:VirtualSwitch")]
    public partial class VirtualSwitch : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Forged transmits (true=Accept/false=Reject).
        /// </summary>
        [Output("forgedTransmits")]
        public Output<bool?> ForgedTransmits { get; private set; } = null!;

        /// <summary>
        /// Virtual Switch Link Discovery Mode.
        /// </summary>
        [Output("linkDiscoveryMode")]
        public Output<string?> LinkDiscoveryMode { get; private set; } = null!;

        /// <summary>
        /// MAC address changes (true=Accept/false=Reject).
        /// </summary>
        [Output("macChanges")]
        public Output<bool?> MacChanges { get; private set; } = null!;

        /// <summary>
        /// Virtual Switch mtu. (1280-9000)
        /// </summary>
        [Output("mtu")]
        public Output<int?> Mtu { get; private set; } = null!;

        /// <summary>
        /// Virtual Switch name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Virtual Switch number of ports. (1-4096)
        /// </summary>
        [Output("ports")]
        public Output<int?> Ports { get; private set; } = null!;

        /// <summary>
        /// Promiscuous mode (true=Accept/false=Reject).
        /// </summary>
        [Output("promiscuousMode")]
        public Output<bool?> PromiscuousMode { get; private set; } = null!;

        /// <summary>
        /// Uplink configuration.
        /// </summary>
        [Output("uplinks")]
        public Output<ImmutableArray<Outputs.Uplink>> Uplinks { get; private set; } = null!;


        /// <summary>
        /// Create a VirtualSwitch resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VirtualSwitch(string name, VirtualSwitchArgs? args = null, CustomResourceOptions? options = null)
            : base("esxi-native:index:VirtualSwitch", name, args ?? new VirtualSwitchArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VirtualSwitch(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("esxi-native:index:VirtualSwitch", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-esxi-native",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VirtualSwitch resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VirtualSwitch Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new VirtualSwitch(name, id, options);
        }
    }

    public sealed class VirtualSwitchArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Forged transmits (true=Accept/false=Reject).
        /// </summary>
        [Input("forgedTransmits")]
        public Input<bool>? ForgedTransmits { get; set; }

        /// <summary>
        /// Virtual Switch Link Discovery Mode.
        /// </summary>
        [Input("linkDiscoveryMode")]
        public Input<string>? LinkDiscoveryMode { get; set; }

        /// <summary>
        /// MAC address changes (true=Accept/false=Reject).
        /// </summary>
        [Input("macChanges")]
        public Input<bool>? MacChanges { get; set; }

        /// <summary>
        /// Virtual Switch mtu. (1280-9000)
        /// </summary>
        [Input("mtu")]
        public Input<int>? Mtu { get; set; }

        /// <summary>
        /// Virtual Switch name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Virtual Switch number of ports. (1-4096)
        /// </summary>
        [Input("ports")]
        public Input<int>? Ports { get; set; }

        /// <summary>
        /// Promiscuous mode (true=Accept/false=Reject).
        /// </summary>
        [Input("promiscuousMode")]
        public Input<bool>? PromiscuousMode { get; set; }

        [Input("uplinks")]
        private InputList<Inputs.UplinkArgs>? _uplinks;

        /// <summary>
        /// Uplink configuration.
        /// </summary>
        public InputList<Inputs.UplinkArgs> Uplinks
        {
            get => _uplinks ?? (_uplinks = new InputList<Inputs.UplinkArgs>());
            set => _uplinks = value;
        }

        public VirtualSwitchArgs()
        {
        }
        public static new VirtualSwitchArgs Empty => new VirtualSwitchArgs();
    }
}
