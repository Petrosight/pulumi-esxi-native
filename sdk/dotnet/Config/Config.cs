// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Immutable;

namespace Pulumi.EsxiNative
{
    public static class Config
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "IDE1006", Justification = 
        "Double underscore prefix used to avoid conflicts with variable names.")]
        private sealed class __Value<T>
        {
            private readonly Func<T> _getter;
            private T _value = default!;
            private bool _set;

            public __Value(Func<T> getter)
            {
                _getter = getter;
            }

            public T Get() => _set ? _value : _getter();

            public void Set(T value)
            {
                _value = value;
                _set = true;
            }
        }

        private static readonly Pulumi.Config __config = new Pulumi.Config("esxi-native");

        private static readonly __Value<string?> _host = new __Value<string?>(() => __config.Get("host"));
        /// <summary>
        /// ESXi Host Name config
        /// </summary>
        public static string? Host
        {
            get => _host.Get();
            set => _host.Set(value);
        }

        private static readonly __Value<string?> _ovfToolDatastoreName = new __Value<string?>(() => __config.Get("ovfToolDatastoreName"));
        /// <summary>
        /// ESXi Datastore Name config were ovftool will be configured
        /// </summary>
        public static string? OvfToolDatastoreName
        {
            get => _ovfToolDatastoreName.Get();
            set => _ovfToolDatastoreName.Set(value);
        }

        private static readonly __Value<string?> _password = new __Value<string?>(() => __config.Get("password"));
        /// <summary>
        /// ESXi Password config
        /// </summary>
        public static string? Password
        {
            get => _password.Get();
            set => _password.Set(value);
        }

        private static readonly __Value<string?> _sshPort = new __Value<string?>(() => __config.Get("sshPort") ?? "22");
        /// <summary>
        /// ESXi Host SSH Port config
        /// </summary>
        public static string? SshPort
        {
            get => _sshPort.Get();
            set => _sshPort.Set(value);
        }

        private static readonly __Value<string?> _sslPort = new __Value<string?>(() => __config.Get("sslPort") ?? "443");
        /// <summary>
        /// ESXi Host SSL Port config
        /// </summary>
        public static string? SslPort
        {
            get => _sslPort.Get();
            set => _sslPort.Set(value);
        }

        private static readonly __Value<string?> _username = new __Value<string?>(() => __config.Get("username") ?? "root");
        /// <summary>
        /// ESXi Username config
        /// </summary>
        public static string? Username
        {
            get => _username.Get();
            set => _username.Set(value);
        }

    }
}
